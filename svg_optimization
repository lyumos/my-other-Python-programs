import glob
import subprocess
import os
from bs4 import BeautifulSoup
import re

# Проверка наличия утилиты svgo
try:
    svgo_version = subprocess.check_output(["svgo", "--version"]).decode()
    if "1.3.2" not in svgo_version:
        raise Exception("Incorrect svgo version")
except (FileNotFoundError, Exception):
    subprocess.check_call(["npm", "install", "-g", "svgo@1.3.2"])


# Путь к папке с SVG файлами
folder_path = "FOLDER_WITH_SVG"

# Получить список файлов SVG в папке
svg_files = glob.glob(folder_path + "/*.svg")

# Применить scour и svgo к каждому файлу
for svg_file in svg_files:
    # scour
    scour_command = f"scour -i {svg_file} -o {svg_file}_scoured.svg --shorten-ids"
    subprocess.run(scour_command, shell=True)

    # svgo
    svgo_command = f"svgo {svg_file}_scoured.svg -o {svg_file}_done.svg --disable=addClassesToSVGElement --disable=cleanupAttrs --disable=cleanupListOfValues --disable=collapseGroups --disable=convertStyleToAttrs --disable=moveElemsAttrsToGroup --disable=prefixIds --disable=preset-default --disable=removeAttributesBySelector --disable=removeAttrs --disable=removeDimensions --disable=removeEditorsNSData --disable=removeViewBox --disable=removeXMLNS --disable=sortAttrs --enable=removeScriptElement"
    subprocess.run(svgo_command, shell=True)

    file_size_kb = round(os.path.getsize(f'{svg_file}_done.svg')/1024, 3)
    print(f"\nРазмер файла: {file_size_kb} КБ")

    # Удалить промежуточный файл
    subprocess.run(f"rm {svg_file}_scoured.svg", shell=True)
    # subprocess.run(f"rm {svg_file}", shell=True)

    # Открываем SVG-файл и считываем его содержимое
    with open(f'{svg_file}_done.svg', 'r', encoding='utf-8') as f:
        svg_content = f.read()

        soup = BeautifulSoup(svg_content, 'xml')
        # итерируемся по всем элементам SVG
        for element in soup.find_all():
            # если содержимое элемента и его название находятся в кириллице
            if element is not None and any(ord(char) > 127 for char in str(element)):
                # выводим информацию о таком элементе
                attributes = element.attrs
                keys_to_delete = [key for key, value in attributes.items() if any(ord(c) > 127 for c in str(value))]

                # удаляем найденные атрибуты
                for key in keys_to_delete:
                    print(f'Удален атрибут тега с кириллицей: {element.name} => {key}: {attributes[key]}\n')
                    del attributes[key]


        svg_content = str(soup)
        svg_content = re.sub(r'<\?xml[^>]*>\s*', '', svg_content)

    with open(f'{svg_file}_done.svg', 'w', encoding='utf-8') as f:
        f.write(svg_content)
